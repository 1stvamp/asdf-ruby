#!/usr/bin/env bash

set -euo pipefail

# shellcheck source=../lib/utils.sh
source "$(dirname "${BASH_SOURCE[0]}")/../lib/utils.sh"

install_ruby() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$install_type" != "version" ]; then
    echoerr "Cannot install specific ref from source, sorry."
    echoerr "For a list of available versions, see \`asdf list-all ruby\`"
    exit 1
  fi

  fetch_patches | ruby-build --patch "$version" "$install_path" ${RUBY_BUILD_OPTS:-}
}

fetch_patches() {
  while read -r line; do
    if [ "$line" = "" ]; then continue; fi
    if [[ "$line" =~ ^[Hh][Tt][Tt][Pp][Ss]?:// ]]; then
      >&2 echo "Using patch from URL: $line"
      curl -s "$line" || exit 1
    else
      local abs_path=$(get_absolute_path "$line")
      >&2 echo "Using local patch: $abs_path"
      cat "$abs_path" || exit 1
    fi
  done <<< "${RUBY_APPLY_PATCHES:-}"
}

get_absolute_path() {
  local start_dir=$(pwd)
  local rel_path=$2
  local rel_dir=$(dirname "$rel_path")
  local rel_base=$(basename "$rel_path")

  (
    cd "$start_dir" \
      && cd "$rel_dir" 2>/dev/null \
      && echo "$(pwd)/$rel_base" \
      || echo "$rel_path"
  )
}

install_default_gems() {
  local default_gems="${HOME}/.default-gems"
  local gem_bin="${ASDF_INSTALL_PATH}/bin/gem"

  if [ ! -f "$default_gems" ]; then return; fi

  echo ""

  while read -r name; do
    echo -n "Installing ${name} gem... "

    if $gem_bin install "$name" > /dev/null 2>&1; then
      echo "SUCCESS"
    else
      echo "FAIL"
    fi
  done <<< "$(cat "$default_gems")"
}

ensure_ruby_build_available
install_ruby "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
install_default_gems
